
IF EXISTS (SELECT name
   FROM   sysobjects
   WHERE  name = 'zakljuci_godinu' AND type = 'P')
   DROP PROCEDURE [zakljuci_godinu]
GO

CREATE PROCEDURE dbo.[zakljuci_godinu]
   @PIB char(12),
   @GODINA numeric(4)
AS
	
	DECLARE
		@BROJ_TRANSAKCIJA INT,
		@BROJ_NEZAKLJUCENIH INT

	SET @BROJ_NEZAKLJUCENIH = (SELECT COUNT(*) FROM POSLOVNA_GODINA WHERE PIB = @PIB
		AND ZAKLJUCENA = 0)
		
	IF (@BROJ_NEZAKLJUCENIH <= 1)
	BEGIN
	 RAISERROR('Mora da postoji bar jedna aktivna godina preduzeca!',11,2)
	 RETURN
	END

	IF (SELECT COUNT(*) FROM PROMETNI_DOKUMENT WHERE PIB = @PIB
		AND GODINA = @GODINA AND STATUS_DOKUMENTA = 'F') > 0
	BEGIN
	 RAISERROR('Zakljucena godina ne sme sadrzati prometne dokumente u fazi pripreme!',11,2)
	 RETURN
	END
	
	IF (SELECT COUNT(*) FROM POPISNI_DOKUMENT WHERE PIB = @PIB
		AND GODINA = @GODINA AND STATUS_DOKUMENTA = 'F') > 0
	BEGIN
	 RAISERROR('Zakljucena godina ne sme sadrzati popisne dokumente u fazi pripreme!',11,2)
	 RETURN
	END	
	
	DECLARE
			@C_PIB CHAR(12),
			@C_SIFRA_OBJEKTA CHAR(12),
			@C_SIFRA_ARTIKLA CHAR(4),
			@C_GODINA NUMERIC(4),
			@C_PROSECNA_CENA DECIMAL(14,2),
			@C_KOLICINA_POCETNOG_STANJA DECIMAL(12,4),
			@C_VREDNOST_POCETNOG_STANJA DECIMAL(14,2),
			@C_KOLICINA_ULAZA DECIMAL(12,4),
			@C_VREDNOST_ULAZA DECIMAL(14,2),
			@C_KOLICINA_IZLAZA DECIMAL(12,4),
			@C_VREDNOST_IZLAZA DECIMAL(14,2),
			@C_KALKULISANA_CENA DECIMAL(14,2)
			
	SET @BROJ_TRANSAKCIJA = @@TRANCOUNT
	
	IF @BROJ_TRANSAKCIJA = 0
	BEGIN TRANSACTION
		
		DECLARE
		@BROJ_GODINE_KOJA_JE_NEZAKLJUCENA NUMERIC(4),
		@UKUPNA_KOLICINA DECIMAL (12,4)
			
		SET @BROJ_GODINE_KOJA_JE_NEZAKLJUCENA = (SELECT GODINA FROM POSLOVNA_GODINA
			WHERE PIB = @PIB AND GODINA<>@GODINA AND ZAKLJUCENA = 0)
				
		DECLARE cursZAKLJUCI CURSOR FOR SELECT PIB, SIFRA_OBJEKTA, SIFRA_ARTIKLA, GODINA, PROSECNA_CENA,
			KOLICINA_POCETNOG_STANJA, VREDNOST_POCETNOG_STANJA, KOLICINA_ULAZA, VREDNOST_ULAZA, KOLICINA_IZLAZA,
			VREDNOST_IZLAZA, KALKULISANA_CENA
			FROM MAGACINSAK_KARTICA
			WHERE PIB = @PIB AND GODINA = @GODINA
			
		OPEN cursZAKLJUCI		
		FETCH NEXT FROM cursZAKLJUCI INTO @C_PIB, @C_SIFRA_OBJEKTA, @C_SIFRA_ARTIKLA, @C_GODINA, @C_PROSECNA_CENA,
		@C_KOLICINA_POCETNOG_STANJA, @C_VREDNOST_POCETNOG_STANJA, @C_KOLICINA_ULAZA,
		@C_VREDNOST_ULAZA, @C_KOLICINA_IZLAZA, @C_VREDNOST_IZLAZA, @C_KALKULISANA_CENA
		
		WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @UKUPNA_KOLICINA = @C_KOLICINA_POCETNOG_STANJA + @C_KOLICINA_ULAZA - @C_KOLICINA_IZLAZA
			IF (@UKUPNA_KOLICINA) > 0
			BEGIN
				INSERT INTO MAGACINSAK_KARTICA VALUES (@C_PIB, @C_SIFRA_OBJEKTA, @C_SIFRA_ARTIKLA, 
				@BROJ_GODINE_KOJA_JE_NEZAKLJUCENA, @C_PROSECNA_CENA, @UKUPNA_KOLICINA, (@C_PROSECNA_CENA*@UKUPNA_KOLICINA),
				0, 0, 0, 0, @C_KALKULISANA_CENA)
			END
				
			IF @@ERROR <> 0
			BEGIN
				RAISERROR('Greska pri unosu podataka u magacinske kartice!', 11, 2)
				IF @BROJ_TRANSAKCIJA = 0 ROLLBACK TRANSACTION
				CLOSE cursZAKLJUCI
				DEALLOCATE cursZAKLJUCI
				RETURN
			END
			
		FETCH NEXT FROM cursZAKLJUCI INTO @C_PIB, @C_SIFRA_OBJEKTA, @C_SIFRA_ARTIKLA, @C_GODINA, @C_PROSECNA_CENA,
		@C_KOLICINA_POCETNOG_STANJA, @C_VREDNOST_POCETNOG_STANJA, @C_KOLICINA_ULAZA,
		@C_VREDNOST_ULAZA, @C_KOLICINA_IZLAZA, @C_VREDNOST_IZLAZA, @C_KALKULISANA_CENA
			
		END
		
		CLOSE cursZAKLJUCI
		DEALLOCATE cursZAKLJUCI
		
		UPDATE POSLOVNA_GODINA SET ZAKLJUCENA = 1 WHERE PIB = @PIB AND GODINA = @GODINA
		
		IF @@ERROR <> 0
		BEGIN
		  RAISERROR('Greska pri zakljucivanju godine',11,2)
		  IF @BROJ_TRANSAKCIJA = 0 ROLLBACK TRANSACTION
		  RETURN
		END
	--	IF @BROJ_TRANSAKCIJA = 0 
		COMMIT TRANSACTION
		
GO